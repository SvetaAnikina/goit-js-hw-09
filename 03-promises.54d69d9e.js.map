{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,aAAcJ,SAASC,cAAc,wBAqBvC,SAASI,EAAcC,EAAUP,GAU/B,OATgB,IAAIQ,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEF,WAAUP,UAEtBU,EAAO,CAAEH,WAAUP,YAClBA,MA1BPD,EAAKM,aAAaU,iBAAiB,SAAS,SAAAC,GAC1CA,EAAMC,iBAKN,IAJA,IAAIC,EAAYC,OAAOpB,EAAKC,MAAMoB,OAC9BC,EAAWF,OAAOpB,EAAKI,KAAKiB,OAC5BhB,EAASe,OAAOpB,EAAKK,OAAOgB,OAEvBE,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAChChB,EAAcgB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUP,EAAKwB,EAALxB,MACjBH,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAAN3B,EAAM,UAE9D4B,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUP,EAAKwB,EAALxB,MAClBH,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAAN3B,EAAM,UAE9DkB,GAAaG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  submitButton: document.querySelector('button[type=submit]'),\n};\n\nrefs.submitButton.addEventListener('click', event => {\n  event.preventDefault();\n  let delayTime = Number(refs.delay.value);\n  let stepTime = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n  //console.log(delayTime, stepTime, amount);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayTime)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayTime += stepTime;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n  return promise;\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","submitButton","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayTime","Number","value","stepTime","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.54d69d9e.js.map"}